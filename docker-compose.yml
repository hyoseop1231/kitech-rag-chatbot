version: '3.8'

services:
  # Main KITECH Application
  kitech-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kitech-chatbot
    ports:
      - "8000:8000"
    environment:
      # Basic Configuration
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      
      # Security Settings
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:8000,http://127.0.0.1:8000}
      
      # File Processing
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-200}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS:-.pdf}
      
      # OCR Settings
      - OCR_LANGUAGES=${OCR_LANGUAGES:-kor+eng}
      - OCR_DPI=${OCR_DPI:-300}
      - OCR_CORRECTION_ENABLED=${OCR_CORRECTION_ENABLED:-true}
      - OCR_MAX_WORKERS=${OCR_MAX_WORKERS:-4}
      
      # LLM Settings
      - OLLAMA_API_URL=${OLLAMA_API_URL:-http://host.docker.internal:11434/api/generate}
      - OLLAMA_DEFAULT_MODEL=${OLLAMA_DEFAULT_MODEL:-gemma2:9b}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.7}
      - LLM_NUM_PREDICT_MULTIMODAL=${LLM_NUM_PREDICT_MULTIMODAL:-2048}
      
      # Database Settings
      - CHROMA_DATA_PATH=/app/vector_db_data
      - COLLECTION_NAME=${COLLECTION_NAME:-kitech_documents}
      
      # Performance Settings
      - EMBEDDING_BATCH_SIZE=${EMBEDDING_BATCH_SIZE:-32}
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-150}
      
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    volumes:
      # Persistent data storage
      - kitech_vector_data:/app/vector_db_data
      - kitech_uploads:/app/uploads
      - kitech_logs:/app/logs
      
      # Optional: Mount custom configuration
      # - ./custom_config:/app/config:ro
      
    restart: unless-stopped
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    
    # Network configuration
    networks:
      - kitech-network


  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: kitech-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - kitech-app
    restart: unless-stopped
    networks:
      - kitech-network
    profiles:
      - production

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: kitech-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - kitech_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - kitech-network
    profiles:
      - monitoring

  # Grafana for monitoring dashboard (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: kitech-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - kitech_grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - kitech-network
    profiles:
      - monitoring

# Named volumes for persistent data
volumes:
  kitech_vector_data:
    driver: local
  kitech_uploads:
    driver: local
  kitech_logs:
    driver: local
  kitech_prometheus_data:
    driver: local
  kitech_grafana_data:
    driver: local

# Network configuration
networks:
  kitech-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16